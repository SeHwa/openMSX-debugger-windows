name: Build and release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    uses: ./.github/workflows/workflow-build.yaml
  release:
    name: Release project packages
    runs-on: ubuntu-latest
    needs: build
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
      - name: Get variables
        id: get-targets
        run: |
          echo "::set-output name=prerelease::${{ needs.build.outputs.prerelease }}"
          echo "::set-output name=draft::${{ needs.build.outputs.draft }}"
          echo "::set-output name=name::${{ needs.build.outputs.name }}"
          ls -R
          debian_target=$(find . -maxdepth 1 -type d -name "*-debian-*" -printf %f)
          mingw_target=$(find . -maxdepth 1 -type d -name "*-mingw-*" -printf %f)
          echo "::set-output name=target_debian::$target_debian"
          echo "::set-output name=target_mingw::$target_mingw"
          if [ "$debian_target" = "" ]; then
            echo "Target name 'mingw_target' not defined"
            exit 1
          fi
          if [ "$mingw_target" = "" ]; then
            echo "Target name 'debian_target' not defined"
            exit 1
          fi
          echo "::set-output name=debian_target::$debian_target"
          echo "::set-output name=mingw_target::$mingw_target"
      - name: Package binaries as zip files
        run: |
          cd ${{ steps.get-targets.outputs.debian_target }}
          zip "${{ steps.get-targets.outputs.debian_target }}.zip" -r .
          cd ..
          cd ${{ steps.get-targets.outputs.mingw_target }}
          zip "${{ steps.get-targets.outputs.mingw_target }}.zip" -r .
          cd ..
          mv ${{ steps.get-targets.outputs.debian_target }}/${{ steps.get-targets.outputs.debian_target }}.zip .
          mv ${{ steps.get-targets.outputs.mingw_target }}/${{ steps.get-targets.outputs.mingw_target }}.zip .
      - name: Pubish binaries
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.zip"
          body: "Build number ${{ github.run_number }}\n${{ github.event.head_commit.message }}"
          token: ${{ secrets.GITHUB_TOKEN }}
